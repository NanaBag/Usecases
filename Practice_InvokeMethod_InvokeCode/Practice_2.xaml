<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1240,1418" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence - Time Difference" sap:VirtualizedContainerService.HintSize="548,1353" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="EventATime" />
      <Variable x:TypeArguments="x:String" Name="EventATimezone" />
      <Variable x:TypeArguments="s:DateTime" Name="EventBTime" />
      <Variable x:TypeArguments="x:String" Name="EventBTimezone" />
      <Variable x:TypeArguments="x:String" Name="TimeDifference" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap2010:Annotation.AnnotationText="2023-02-07 08:20:00" DisplayName="Assign Event A Time" sap:VirtualizedContainerService.HintSize="486,113" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[EventATime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[New DateTime(2023, 2, 7, 8, 20, 0)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign DisplayName="Assign Event A Timezone" sap:VirtualizedContainerService.HintSize="486,82" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EventATimezone]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">Central Europe Standard Time</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="2023-02-07 12:45:00" DisplayName="Assign Event B Time" sap:VirtualizedContainerService.HintSize="486,113" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[EventBTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[New DateTime(2023, 2, 7, 12, 45, 0)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign DisplayName="Assign Event B Timezone" sap:VirtualizedContainerService.HintSize="486,82" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EventBTimezone]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">Eastern Standard Time</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,355" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,276" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="' We can find out the list of supported Time Zone IDs from the Registry at&#xA;' HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones&#xA;' Or by using the TimeZoneInfo.GetSystemTimeZones() method.&#xA;&#xA;Dim TimeZoneInfoA As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(TimeZoneA)&#xA;Dim TimeZoneInfoB As TimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(TimeZoneB)&#xA;&#xA;' Convert the time of the Event A to the timezone of Event B&#xA;Dim EventATimeInTimezoneB As DateTime = TimeZoneInfo.ConvertTime(EventATime, TimeZoneInfoA, TimeZoneInfoB)&#xA;&#xA;' Compute the time difference between the two events&#xA;Dim timeDifference As TimeSpan = EventBTime - EventATimeInTimezoneB&#xA;&#xA;Result = timeDifference.ToString" DisplayName="Vb.Net code - Compute Time Difference" sap:VirtualizedContainerService.HintSize="388,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="s:DateTime" x:Key="EventATime">
                <VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="EventATime" />
              </InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="EventBTime">
                <VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="EventBTime" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TimeZoneA">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="EventATimezone" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TimeZoneB">
                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="EventBTimezone" />
              </InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Result">
                <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TimeDifference" />
              </OutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="TimeZoneInfo TimeZoneInfoA = TimeZoneInfo.FindSystemTimeZoneById(TimeZoneA);&#xD;&#xA;TimeZoneInfo TimeZoneInfoB = TimeZoneInfo.FindSystemTimeZoneById(TimeZoneB);&#xD;&#xA;&#xD;&#xA;DateTime EventATimeInTimeZoneB = TimeZoneInfo.ConvertTime(EventATime,TimeZoneInfoA,TimeZoneInfoB);&#xD;&#xA;&#xD;&#xA;TimeSpan timeDifference = EventBTime - EventATimeInTimeZoneB;&#xD;&#xA;&#xD;&#xA;Result = timeDifference.ToString();" DisplayName="C# Code - Compute Time Difference" sap:VirtualizedContainerService.HintSize="486,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="s:DateTime" x:Key="EventATime">
          <VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="EventATime" />
        </InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="EventBTime">
          <VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="EventBTime" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TimeZoneA">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="EventATimezone" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TimeZoneB">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="EventBTimezone" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Result">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TimeDifference" />
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message - Time Difference" sap:VirtualizedContainerService.HintSize="486,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[TimeDifference]" />
  </Sequence>
</Activity>