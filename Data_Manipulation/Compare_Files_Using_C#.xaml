<Activity mc:Ignorable="sap sap2010" x:Class="Compare_Files_Using_C_" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1240,1565" sap2010:WorkflowViewState.IdRef="Compare_Files_Using_C__1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models.FilterBuilder</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Activities</x:String>
      <x:String>UiPath.Platform.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="SHA256.Create is a method in System.Security.Cryptography. &#xA;&#xA;SHA-256 is a cryptographic hash function that converts text into a 256-bit alphanumeric string. The output is known as a hash value. &#xA;&#xA;SHA-256 is used for cryptographic security and is one of the most well-known hashing algorithms used by cryptocurrencies. It's also used for digital signing verification. &#xA;&#xA;SHA-256 is a one-way cryptographic hash function. It's strong enough to prevent hackers from deriving the original message from the hash value." DisplayName="Compare_Files_Using_C_Sharp" sap:VirtualizedContainerService.HintSize="493,1500" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="FirstFilePath" />
      <Variable x:TypeArguments="x:String" Name="SecondFilePath" />
      <Variable x:TypeArguments="x:String" Name="FirstFileHashCode" />
      <Variable x:TypeArguments="x:String" Name="SecondFileHashCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[FirstFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[System.IO.Directory.GetCurrentDirectory+System.IO.Path.Combine("\Input\CityData.xlsx")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[SecondFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[System.IO.Directory.GetCurrentDirectory+System.IO.Path.Combine("\Input\CountryData.xlsx")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="System.Security.Cryptography.SHA256 Encryptor = System.Security.Cryptography.SHA256.Create();&#xA;FileStream fileStream = File.OpenRead(FilePath);&#xA;fileStream.Position = 0;&#xA;byte[] bytesToHash = Encryptor.ComputeHash(fileStream);&#xA;fileStream.Close();&#xA;&#xA;foreach (var item in bytesToHash)&#xA;&#x9;Result += item.ToString(&quot;x2&quot;);&#xA;&#xA;" DisplayName="Invoke code - Compute hash code for first file" sap:VirtualizedContainerService.HintSize="431,165" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="FilePath">[FirstFilePath]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Result">[FirstFileHashCode]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message First File Hash Signature" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;First file hash signature: &quot; + FirstFileHashCode]" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="System.Security.Cryptography.SHA256 Encryptor = System.Security.Cryptography.SHA256.Create();&#xA; &#xA;// Create a fileStream For the file.&#xA;&#xA;FileStream fileStream = File.OpenRead(FilePath);&#xA;&#xA;//Be sure it's positioned to the beginning of the stream.&#xA;fileStream.Position = 0;&#xA;&#xA;// Compute the hash code for the fileStream&#xA;byte[] bytesToHash  = Encryptor.ComputeHash(fileStream);&#xA; &#xA;// Close the fileStream&#xA;fileStream.Close();&#xA;&#xA;//Convert the hash bytes to user-friendly text&#xA;&#xA;foreach (var item in bytesToHash)&#xA;&#x9;Result += item.ToString(&quot;x2&quot;);&#xA;    " DisplayName="Invoke code - Compute hash code for second file" sap:VirtualizedContainerService.HintSize="431,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="FilePath">[SecondFilePath]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Result">[SecondFileHashCode]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message Second File Hash Signature" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Second file hash signature: &quot; + SecondFileHashCode]" />
    <If Condition="[FirstFileHashCode.Equals(SecondFileHashCode)]" DisplayName="If Same Hash Code" sap:VirtualizedContainerService.HintSize="431,366" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:LogMessage DisplayName="Log Message Identical files" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;The files are identical!&quot;]" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message different content" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;The content of the files is different!&quot;]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>